<?xml version="1.0" encoding="utf-8"?>
<ERRORLOG><ERROR xml:id="_1"><DATE>14-06-2006 17:26:20</DATE><TYPE>Remarque</TYPE><PHP_MESSAGE>Undefined variable: a</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\index.php</FILE><LINE>12</LINE><MEMORY>n/a</MEMORY><TRANSLATION>La variable est utilisée alors qu'elle n'a pas été définie</TRANSLATION><SUGGESTION>Définissez la variable avant de l'utiliser, ou vérifiez son existence avec if (isset ($variable))</SUGGESTION><CONTEXT>n/a</CONTEXT><SOURCE><SOURCE_LINE>echo 'bla';&#13;
</SOURCE_LINE><SOURCE_LINE>echo '&lt;br /&gt;', 'bli';&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ echo $a; // Gasp, undefined!&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>&#13;
</SOURCE_LINE><SOURCE_LINE>echo '&lt;br /&gt;truc';&#13;
</SOURCE_LINE></SOURCE></ERROR><ERROR xml:id="_2"><DATE>14-06-2006 17:26:20</DATE><TYPE>Remarque</TYPE><PHP_MESSAGE>Undefined variable: b</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\index.php</FILE><LINE>16</LINE><MEMORY>n/a</MEMORY><TRANSLATION>La variable est utilisée alors qu'elle n'a pas été définie</TRANSLATION><SUGGESTION>Définissez la variable avant de l'utiliser, ou vérifiez son existence avec if (isset ($variable))</SUGGESTION><CONTEXT>n/a</CONTEXT><SOURCE><SOURCE_LINE>echo '&lt;br /&gt;truc';&#13;
</SOURCE_LINE><SOURCE_LINE>echo '&lt;br /&gt;oula';&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ echo $b; // bad girl : again undefined!&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>&#13;
</SOURCE_LINE><SOURCE_LINE>//$odebug -&gt; ERROR = false; // test to see if turning off the class error handler is effective. And, indeed, it is :-) (commented line, hey, remove to see)&#13;
</SOURCE_LINE></SOURCE></ERROR><ERROR xml:id="_3"><DATE>14-06-2006 17:26:20</DATE><TYPE>Remarque</TYPE><PHP_MESSAGE>Use of undefined constant nom - assumed 'nom'</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\index.php</FILE><LINE>19</LINE><MEMORY>n/a</MEMORY><TRANSLATION>Utilisation d'une constante indéfinie</TRANSLATION><SUGGESTION>La constante utilisée n'a pas été définie (via define ()), ou vous utilisez une variable sans $ devant : echo var;, ou un index associatif dans un tableau non délimité par des apostrophes: echo $aTab[nom]</SUGGESTION><CONTEXT>n/a</CONTEXT><SOURCE><SOURCE_LINE>&#13;
</SOURCE_LINE><SOURCE_LINE>//$odebug -&gt; ERROR = false; // test to see if turning off the class error handler is effective. And, indeed, it is :-) (commented line, hey, remove to see)&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ echo $aTab[nom];&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>//$odebug -&gt; ERROR = true; // switching it back on (commented line, hey, remove to see)&#13;
</SOURCE_LINE><SOURCE_LINE>&#13;
</SOURCE_LINE></SOURCE></ERROR><ERROR xml:id="_4"><DATE>14-06-2006 17:26:20</DATE><TYPE>Remarque</TYPE><PHP_MESSAGE>Undefined variable: aTab</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\index.php</FILE><LINE>19</LINE><MEMORY>n/a</MEMORY><TRANSLATION>La variable est utilisée alors qu'elle n'a pas été définie</TRANSLATION><SUGGESTION>Définissez la variable avant de l'utiliser, ou vérifiez son existence avec if (isset ($variable))</SUGGESTION><CONTEXT>n/a</CONTEXT><SOURCE><SOURCE_LINE>&#13;
</SOURCE_LINE><SOURCE_LINE>//$odebug -&gt; ERROR = false; // test to see if turning off the class error handler is effective. And, indeed, it is :-) (commented line, hey, remove to see)&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ echo $aTab[nom];&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>//$odebug -&gt; ERROR = true; // switching it back on (commented line, hey, remove to see)&#13;
</SOURCE_LINE><SOURCE_LINE>&#13;
</SOURCE_LINE></SOURCE></ERROR><ERROR xml:id="_5"><DATE>14-06-2006 17:26:20</DATE><TYPE>Alerte spécifique</TYPE><PHP_MESSAGE>La variable c n'est pas définie</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\index.php</FILE><LINE>24</LINE><MEMORY>n/a</MEMORY><TRANSLATION></TRANSLATION><SUGGESTION></SUGGESTION><CONTEXT>n/a</CONTEXT><SOURCE><SOURCE_LINE>// Let's see how it handles user defined errors (no translation, no suggestion, of course)&#13;
</SOURCE_LINE><SOURCE_LINE>if (!isset ($c)) {&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ 	trigger_error ('La variable c n\'est pas définie', E_USER_WARNING);&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>}&#13;
</SOURCE_LINE><SOURCE_LINE>&#13;
</SOURCE_LINE></SOURCE></ERROR><ERROR xml:id="_6"><DATE>14-06-2006 17:26:20</DATE><TYPE>Exception 0</TYPE><PHP_MESSAGE>Lancement d'une exception !</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\index.php</FILE><LINE>29</LINE><MEMORY>n/a</MEMORY><TRANSLATION></TRANSLATION><SUGGESTION></SUGGESTION><CONTEXT>#0 {main}</CONTEXT><SOURCE><SOURCE_LINE>// Let's see how it handles exceptions !&#13;
</SOURCE_LINE><SOURCE_LINE>if (!isset ($e)) {&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ 	throw new Exception('Lancement d\'une exception !');&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>}&#13;
</SOURCE_LINE><SOURCE_LINE>&#13;
</SOURCE_LINE></SOURCE></ERROR><ERROR xml:id="_7"><DATE>14-06-2006 17:26:20</DATE><TYPE>Remarque Runtime</TYPE><PHP_MESSAGE>date() [&lt;a href='function.date'&gt;function.date&lt;/a&gt;]: It is not safe to rely on the system's timezone settings. Please use the date.timezone setting, the TZ environment variable or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected 'Europe/Paris' for '2.0/DST' instead</PHP_MESSAGE><FILE>C:\wamp\www\cls\debugger\class\odebugger.cls.php</FILE><LINE>315</LINE><MEMORY>n/a</MEMORY><TRANSLATION></TRANSLATION><SUGGESTION></SUGGESTION><CONTEXT>n/a</CONTEXT><SOURCE><SOURCE_LINE>		$oNewLog -&gt; setAttribute ('xml:id', '_'.$iNewId);&#13;
</SOURCE_LINE><SOURCE_LINE>&#13;
</SOURCE_LINE><SOURCE_LINE_ERROR> /** ERROR AROUND THIS LINE =&gt; */ 		$aElem[] = $this -&gt; oXMLDOC -&gt; createElement ('DATE', date ('d-m-Y H:i:s'));&#13;
</SOURCE_LINE_ERROR><SOURCE_LINE>		$aElem[] = $this -&gt; oXMLDOC -&gt; createElement ('TYPE', $sType);&#13;
</SOURCE_LINE><SOURCE_LINE>		$sErrStr = utf8_encode ($sErrStr);&#13;
</SOURCE_LINE></SOURCE></ERROR></ERRORLOG>
